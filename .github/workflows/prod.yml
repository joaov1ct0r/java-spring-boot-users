name: Java users rest API

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
      - name: Build project
        run: mvn clean install
      - name: Login docker
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build -t joaov1ct0r/java_users_api_rest .
      - name: Publish image
        run: docker push joaov1ct0r/java_users_api_rest
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Remove container
        run: docker rm -f java_users_api_rest
      - name: Remove all stopped containers
        run: docker container prune -f
      - name: Remove unused images
        run: docker image prune -a -f
      - name: Remove unused volumes
        run: docker volume prune -f
      - name: Pull image docker hub
        run: docker pull joaov1ct0r/java_users_api_rest:latest
      - name: Run docker container Java users REST API
        run: docker run -d -p 8080:8080 --shm-size=1g -e SPRING_EMAIL=${{secrets.SPRING_EMAIL}} -e SPRING_EMAIL_PASSWORD=${{secrets.SPRING_EMAIL_PASSWORD}} -e AWS_S3_BUCKET_NAME=${{secrets.AWS_S3_BUCKET_NAME}} -e AWS_S3_REGION=${{secrets.AWS_S3_REGION}} -e AWS_S3_ACCESS_KEY_ID=${{secrets.AWS_S3_ACCESS_KEY_ID}} -e AWS_S3_SECRET_ACCESS_KEY=${{secrets.AWS_S3_SECRET_ACCESS_KEY}} -e TOKEN_SECRET=${{secrets.TOKEN_SECRET}} -e DATABASE_URL=${{secrets.DATABASE_URL}} -e DATABASE_PASSWORD='${{secrets.DATABASE_PASSWORD}}' -e DATABASE_USERNAME=${{secrets.DATABASE_USERNAME}} --name java_users_api_rest joaov1ct0r/java_users_api_rest
